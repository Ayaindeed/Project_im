{"ast":null,"code":"import api from './api';\nexport const login = async credentials => {\n  const response = await api.post('/auth/login', credentials);\n  return response.data;\n};\nexport const registerUser = async userData => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\nexport const registerAdmin = async adminData => {\n  try {\n    const userData = {\n      nom: adminData.nom,\n      prenom: adminData.prenom,\n      email: adminData.email,\n      motdepasse: adminData.motdepasse,\n      role: 'admin' // Fixed value\n      // actif and dateInscription will be set by backend\n    };\n    const response = await api.post('/auth/admin/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Admin registration error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","login","credentials","response","post","data","registerUser","userData","registerAdmin","adminData","nom","prenom","email","motdepasse","role","error","console"],"sources":["C:/Users/hp/Downloads/Project_/internship-management-app/frontend/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const login = async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n};\r\n\r\nexport const registerAdmin = async (adminData) => {\r\n    try {\r\n        const userData = {\r\n            nom: adminData.nom,\r\n            prenom: adminData.prenom,\r\n            email: adminData.email,\r\n            motdepasse: adminData.motdepasse,\r\n            role: 'admin', // Fixed value\r\n            // actif and dateInscription will be set by backend\r\n        };\r\n\r\n        const response = await api.post('/auth/admin/register', userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Admin registration error:', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EACxC,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;EAC3D,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;EAC3D,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMG,aAAa,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACA,MAAMF,QAAQ,GAAG;MACbG,GAAG,EAAED,SAAS,CAACC,GAAG;MAClBC,MAAM,EAAEF,SAAS,CAACE,MAAM;MACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;MACtBC,UAAU,EAAEJ,SAAS,CAACI,UAAU;MAChCC,IAAI,EAAE,OAAO,CAAE;MACf;IACJ,CAAC;IAED,MAAMX,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,sBAAsB,EAAEG,QAAQ,CAAC;IACjE,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}