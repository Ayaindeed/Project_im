{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Project_\\\\internMatch\\\\frontend\\\\src\\\\components\\\\AdminNotifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AdminNotifications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminNotifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    // Écouter tous les événements de synchronisation admin\n    const handleAdminNotification = event => {\n      const notification = {\n        id: Date.now(),\n        type: event.detail.type,\n        message: getNotificationMessage(event.detail),\n        timestamp: new Date(),\n        data: event.detail.data\n      };\n      setNotifications(prev => [notification, ...prev.slice(0, 4)]); // Garder seulement 5 notifications\n      setVisible(true);\n\n      // Auto-hide après 5 secondes\n      setTimeout(() => {\n        setNotifications(prev => prev.filter(n => n.id !== notification.id));\n      }, 5000);\n    };\n    const handleCandidatureUpdate = event => {\n      const notification = {\n        id: Date.now(),\n        type: 'candidature_update',\n        message: 'Une candidature a été traitée',\n        timestamp: new Date(),\n        data: event.detail\n      };\n      setNotifications(prev => [notification, ...prev.slice(0, 4)]);\n      setVisible(true);\n      setTimeout(() => {\n        setNotifications(prev => prev.filter(n => n.id !== notification.id));\n      }, 5000);\n    };\n    const handleStatsUpdate = () => {\n      const notification = {\n        id: Date.now(),\n        type: 'stats_update',\n        message: 'Les statistiques ont été mises à jour',\n        timestamp: new Date(),\n        data: null\n      };\n      setNotifications(prev => [notification, ...prev.slice(0, 4)]);\n      setVisible(true);\n      setTimeout(() => {\n        setNotifications(prev => prev.filter(n => n.id !== notification.id));\n      }, 5000);\n    };\n    window.addEventListener('adminNotification', handleAdminNotification);\n    window.addEventListener('candidatureTraitee', handleCandidatureUpdate);\n    window.addEventListener('statsUpdated', handleStatsUpdate);\n    return () => {\n      window.removeEventListener('adminNotification', handleAdminNotification);\n      window.removeEventListener('candidatureTraitee', handleCandidatureUpdate);\n      window.removeEventListener('statsUpdated', handleStatsUpdate);\n    };\n  }, []);\n  const getNotificationMessage = detail => {\n    switch (detail.type) {\n      case 'stage_status_updated':\n        return `Le statut du stage a été mis à jour vers \"${detail.status}\"`;\n      case 'candidature_processed':\n        return `Une candidature a été ${detail.status}`;\n      case 'user_status_changed':\n        return `Le statut d'un utilisateur a été modifié`;\n      case 'data_sync':\n        return 'Synchronisation des données effectuée';\n      default:\n        return 'Notification admin';\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'candidature_update':\n        return '📋';\n      case 'stats_update':\n        return '📊';\n      case 'stage_status_updated':\n        return '🏢';\n      case 'user_status_changed':\n        return '👤';\n      case 'data_sync':\n        return '🔄';\n      default:\n        return '🔔';\n    }\n  };\n  if (notifications.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `admin-notifications ${visible ? 'visible' : ''}`,\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification notification-${notification.type}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-icon\",\n          children: getNotificationIcon(notification.type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-message\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-time\",\n            children: notification.timestamp.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminNotifications, \"VmeYhHKB7M/XqWiO8Y9DxHx4iP0=\");\n_c = AdminNotifications;\nexport default AdminNotifications;\nvar _c;\n$RefreshReg$(_c, \"AdminNotifications\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminNotifications","_s","notifications","setNotifications","visible","setVisible","handleAdminNotification","event","notification","id","Date","now","type","detail","message","getNotificationMessage","timestamp","data","prev","slice","setTimeout","filter","n","handleCandidatureUpdate","handleStatsUpdate","window","addEventListener","removeEventListener","status","getNotificationIcon","length","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Project_/internMatch/frontend/src/components/AdminNotifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AdminNotifications.css';\r\n\r\nconst AdminNotifications = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Écouter tous les événements de synchronisation admin\r\n        const handleAdminNotification = (event) => {\r\n            const notification = {\r\n                id: Date.now(),\r\n                type: event.detail.type,\r\n                message: getNotificationMessage(event.detail),\r\n                timestamp: new Date(),\r\n                data: event.detail.data\r\n            };\r\n            \r\n            setNotifications(prev => [notification, ...prev.slice(0, 4)]); // Garder seulement 5 notifications\r\n            setVisible(true);\r\n            \r\n            // Auto-hide après 5 secondes\r\n            setTimeout(() => {\r\n                setNotifications(prev => prev.filter(n => n.id !== notification.id));\r\n            }, 5000);\r\n        };\r\n\r\n        const handleCandidatureUpdate = (event) => {\r\n            const notification = {\r\n                id: Date.now(),\r\n                type: 'candidature_update',\r\n                message: 'Une candidature a été traitée',\r\n                timestamp: new Date(),\r\n                data: event.detail\r\n            };\r\n            \r\n            setNotifications(prev => [notification, ...prev.slice(0, 4)]);\r\n            setVisible(true);\r\n            \r\n            setTimeout(() => {\r\n                setNotifications(prev => prev.filter(n => n.id !== notification.id));\r\n            }, 5000);\r\n        };\r\n\r\n        const handleStatsUpdate = () => {\r\n            const notification = {\r\n                id: Date.now(),\r\n                type: 'stats_update',\r\n                message: 'Les statistiques ont été mises à jour',\r\n                timestamp: new Date(),\r\n                data: null\r\n            };\r\n            \r\n            setNotifications(prev => [notification, ...prev.slice(0, 4)]);\r\n            setVisible(true);\r\n            \r\n            setTimeout(() => {\r\n                setNotifications(prev => prev.filter(n => n.id !== notification.id));\r\n            }, 5000);\r\n        };\r\n\r\n        window.addEventListener('adminNotification', handleAdminNotification);\r\n        window.addEventListener('candidatureTraitee', handleCandidatureUpdate);\r\n        window.addEventListener('statsUpdated', handleStatsUpdate);\r\n\r\n        return () => {\r\n            window.removeEventListener('adminNotification', handleAdminNotification);\r\n            window.removeEventListener('candidatureTraitee', handleCandidatureUpdate);\r\n            window.removeEventListener('statsUpdated', handleStatsUpdate);\r\n        };\r\n    }, []);\r\n\r\n    const getNotificationMessage = (detail) => {\r\n        switch (detail.type) {\r\n            case 'stage_status_updated':\r\n                return `Le statut du stage a été mis à jour vers \"${detail.status}\"`;\r\n            case 'candidature_processed':\r\n                return `Une candidature a été ${detail.status}`;\r\n            case 'user_status_changed':\r\n                return `Le statut d'un utilisateur a été modifié`;\r\n            case 'data_sync':\r\n                return 'Synchronisation des données effectuée';\r\n            default:\r\n                return 'Notification admin';\r\n        }\r\n    };\r\n\r\n    const getNotificationIcon = (type) => {\r\n        switch (type) {\r\n            case 'candidature_update':\r\n                return '📋';\r\n            case 'stats_update':\r\n                return '📊';\r\n            case 'stage_status_updated':\r\n                return '🏢';\r\n            case 'user_status_changed':\r\n                return '👤';\r\n            case 'data_sync':\r\n                return '🔄';\r\n            default:\r\n                return '🔔';\r\n        }\r\n    };\r\n\r\n    if (notifications.length === 0) return null;\r\n\r\n    return (\r\n        <div className={`admin-notifications ${visible ? 'visible' : ''}`}>\r\n            {notifications.map(notification => (\r\n                <div key={notification.id} className={`notification notification-${notification.type}`}>\r\n                    <div className=\"notification-content\">\r\n                        <span className=\"notification-icon\">\r\n                            {getNotificationIcon(notification.type)}\r\n                        </span>\r\n                        <div className=\"notification-text\">\r\n                            <p className=\"notification-message\">{notification.message}</p>\r\n                            <span className=\"notification-time\">\r\n                                {notification.timestamp.toLocaleTimeString()}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminNotifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}