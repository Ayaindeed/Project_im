{"ast":null,"code":"import api from './api';\nexport const getAllStages = async () => {\n  const response = await api.get('/stages');\n  return response.data;\n};\nexport const getEntrepriseStages = async () => {\n  try {\n    const response = await api.get('/api/entreprise/stages');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching enterprise stages:', error);\n    throw error;\n  }\n};\nexport const createStage = async stageData => {\n  const response = await api.post('/api/entreprise/stages', stageData);\n  return response.data;\n};\nexport const postulerStage = async formData => {\n  // Configure axios to handle FormData\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  const response = await api.post(`/stages/${formData.get('stageId')}/postuler`, formData, config);\n  return response.data;\n};\nexport const getStageStats = async () => {\n  const response = await api.get('/admin/stages/stats');\n  return response.data;\n};\nexport const getCandidatures = async () => {\n  try {\n    const response = await api.get('/api/entreprise/candidatures');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching candidatures:', error);\n    throw error;\n  }\n};\nexport const traiterCandidature = async (candidatureId, data) => {\n  try {\n    const response = await api.put(`/api/entreprise/candidatures/${candidatureId}/traiter`, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error processing candidature:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getAllStages","response","get","data","getEntrepriseStages","error","console","createStage","stageData","post","postulerStage","formData","config","headers","getStageStats","getCandidatures","traiterCandidature","candidatureId","put"],"sources":["C:/Users/hp/Downloads/Project_/internship-management-app/frontend/src/services/stageService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const getAllStages = async () => {\r\n    const response = await api.get('/stages');\r\n    return response.data;\r\n};\r\n\r\nexport const getEntrepriseStages = async () => {\r\n    try {\r\n        const response = await api.get('/api/entreprise/stages');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching enterprise stages:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createStage = async (stageData) => {\r\n    const response = await api.post('/api/entreprise/stages', stageData);\r\n    return response.data;\r\n};\r\n\r\nexport const postulerStage = async (formData) => {\r\n    // Configure axios to handle FormData\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    };\r\n    const response = await api.post(`/stages/${formData.get('stageId')}/postuler`, formData, config);\r\n    return response.data;\r\n};\r\n\r\nexport const getStageStats = async () => {\r\n    const response = await api.get('/admin/stages/stats');\r\n    return response.data;\r\n};\r\n\r\nexport const getCandidatures = async () => {\r\n    try {\r\n        const response = await api.get('/api/entreprise/candidatures');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching candidatures:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const traiterCandidature = async (candidatureId, data) => {\r\n    try {\r\n        const response = await api.put(`/api/entreprise/candidatures/${candidatureId}/traiter`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error processing candidature:', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMH,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,wBAAwB,CAAC;IACxD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC5C,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACU,IAAI,CAAC,wBAAwB,EAAED,SAAS,CAAC;EACpE,OAAOP,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMO,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC7C;EACA,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EACD,MAAMZ,QAAQ,GAAG,MAAMF,GAAG,CAACU,IAAI,CAAC,WAAWE,QAAQ,CAACT,GAAG,CAAC,SAAS,CAAC,WAAW,EAAES,QAAQ,EAAEC,MAAM,CAAC;EAChG,OAAOX,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMb,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,8BAA8B,CAAC;IAC9D,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMW,kBAAkB,GAAG,MAAAA,CAAOC,aAAa,EAAEd,IAAI,KAAK;EAC7D,IAAI;IACA,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACmB,GAAG,CAAC,gCAAgCD,aAAa,UAAU,EAAEd,IAAI,CAAC;IAC7F,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}