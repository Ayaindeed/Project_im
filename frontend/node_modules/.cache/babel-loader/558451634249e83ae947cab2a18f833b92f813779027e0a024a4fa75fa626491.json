{"ast":null,"code":"import api from './api';\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n\n      // Dispatch un événement personnalisé pour signaler la connexion\n      const loginEvent = new CustomEvent('userLogin', {\n        detail: {\n          user: response.data.user\n        }\n      });\n      window.dispatchEvent(loginEvent);\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nexport const registerUser = async userData => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\nexport const registerAdmin = async adminData => {\n  try {\n    const response = await api.post('/auth/admin/register', {\n      nom: adminData.nom,\n      prenom: adminData.prenom,\n      email: adminData.email,\n      motdepasse: adminData.motdepasse\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Admin registration error:', error);\n    throw error;\n  }\n};\nexport const updateProfile = async formData => {\n  try {\n    const response = await api.put('/auth/profile', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error('Update profile error:', error);\n    throw error;\n  }\n};\nexport const authService = {\n  loginUser,\n  registerUser,\n  registerAdmin,\n  updateProfile\n};","map":{"version":3,"names":["api","loginUser","credentials","response","post","data","token","localStorage","setItem","JSON","stringify","user","loginEvent","CustomEvent","detail","window","dispatchEvent","error","console","registerUser","userData","registerAdmin","adminData","nom","prenom","email","motdepasse","updateProfile","formData","put","headers","authService"],"sources":["C:/Users/hp/Downloads/Project_/internMatch/frontend/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/auth/login', credentials);\r\n        \r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n            \r\n            // Dispatch un événement personnalisé pour signaler la connexion\r\n            const loginEvent = new CustomEvent('userLogin', { \r\n                detail: { user: response.data.user } \r\n            });\r\n            window.dispatchEvent(loginEvent);\r\n        }\r\n        \r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n};\r\n\r\nexport const registerAdmin = async (adminData) => {\r\n    try {\r\n        const response = await api.post('/auth/admin/register', {\r\n            nom: adminData.nom,\r\n            prenom: adminData.prenom,\r\n            email: adminData.email,\r\n            motdepasse: adminData.motdepasse\r\n        });\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Admin registration error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateProfile = async (formData) => {\r\n    try {\r\n        const response = await api.put('/auth/profile', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Update profile error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const authService = {\r\n    loginUser,\r\n    registerUser,\r\n    registerAdmin,\r\n    updateProfile\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;IAE3D,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC;;MAEhE;MACA,MAAMC,UAAU,GAAG,IAAIC,WAAW,CAAC,WAAW,EAAE;QAC5CC,MAAM,EAAE;UAAEH,IAAI,EAAER,QAAQ,CAACE,IAAI,CAACM;QAAK;MACvC,CAAC,CAAC;MACFI,MAAM,CAACC,aAAa,CAACJ,UAAU,CAAC;IACpC;IAEA,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMjB,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,gBAAgB,EAAEgB,QAAQ,CAAC;EAC3D,OAAOjB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMgB,aAAa,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACA,MAAMnB,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,sBAAsB,EAAE;MACpDmB,GAAG,EAAED,SAAS,CAACC,GAAG;MAClBC,MAAM,EAAEF,SAAS,CAACE,MAAM;MACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;MACtBC,UAAU,EAAEJ,SAAS,CAACI;IAC1B,CAAC,CAAC;IAEF,OAAOvB,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMU,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACA,MAAMzB,QAAQ,GAAG,MAAMH,GAAG,CAAC6B,GAAG,CAAC,eAAe,EAAED,QAAQ,EAAE;MACtDE,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAO3B,QAAQ;EACnB,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMc,WAAW,GAAG;EACvB9B,SAAS;EACTkB,YAAY;EACZE,aAAa;EACbM;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}