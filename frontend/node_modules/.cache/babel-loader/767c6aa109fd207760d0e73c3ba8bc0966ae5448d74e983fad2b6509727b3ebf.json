{"ast":null,"code":"import api from'./api';export const getAllStages=async()=>{const response=await api.get('/stage');return response.data;};export const getEntrepriseStages=async()=>{try{var _response$data;console.log('Calling API: /entreprise/stages');const response=await api.get('/entreprise/stages');console.log('Enterprise stages API response:',response);console.log('Response data:',response.data);console.log('Data length:',(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.length);if(response.data&&response.data.length>0){console.log('First stage:',response.data[0]);console.log('First stage candidatures:',response.data[0].candidatures);}// Return the data directly without nesting it further\nreturn response.data;}catch(error){var _error$response;console.error('Error fetching enterprise stages:',error);console.error('Error details:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);throw error;}};export const createStage=async stageData=>{try{console.log('Creating stage with data:',stageData);const response=await api.post('/entreprise/stages',stageData);return response.data;}catch(error){console.error('Error creating stage:',error);throw error;}};export const postulerStage=async formData=>{// Configure axios to handle FormData\nconst config={headers:{'Content-Type':'multipart/form-data'}};const response=await api.post(\"/stage/\".concat(formData.get('stageId'),\"/postuler\"),formData,config);return response.data;};export const getStageStats=async()=>{const response=await api.get('/admin/stages/stats');return response.data;};export const getCandidatures=async()=>{try{const response=await api.get('/entreprise/candidatures');return response.data;}catch(error){console.error('Error fetching candidatures:',error);throw error;}};export const traiterCandidature=async(candidatureId,data)=>{try{const response=await api.put(\"/entreprise/candidatures/\".concat(candidatureId,\"/traiter\"),data);return response.data;}catch(error){console.error('Error processing candidature:',error);throw error;}};export const updateStage=async(stageId,stageData)=>{try{console.log('Updating stage with ID:',stageId,'and data:',stageData);const response=await api.put(\"/entreprise/stages/\".concat(stageId),stageData);return response.data;}catch(error){console.error('Error updating stage:',error);throw error;}};export const deleteStage=async stageId=>{try{console.log('Deleting stage with ID:',stageId);const response=await api.delete(\"/entreprise/stages/\".concat(stageId));return response.data;}catch(error){console.error('Error deleting stage:',error);throw error;}};","map":{"version":3,"names":["api","getAllStages","response","get","data","getEntrepriseStages","_response$data","console","log","length","candidatures","error","_error$response","createStage","stageData","post","postulerStage","formData","config","headers","concat","getStageStats","getCandidatures","traiterCandidature","candidatureId","put","updateStage","stageId","deleteStage","delete"],"sources":["C:/Users/hp/Downloads/Project_/internship-management-app/frontend/src/services/stageService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const getAllStages = async () => {\r\n    const response = await api.get('/stage');\r\n    return response.data;\r\n};\r\n\r\nexport const getEntrepriseStages = async () => {\r\n    try {\r\n        console.log('Calling API: /entreprise/stages');\r\n        const response = await api.get('/entreprise/stages');\r\n        console.log('Enterprise stages API response:', response);\r\n        console.log('Response data:', response.data);\r\n        console.log('Data length:', response.data?.length);\r\n        \r\n        if (response.data && response.data.length > 0) {\r\n            console.log('First stage:', response.data[0]);\r\n            console.log('First stage candidatures:', response.data[0].candidatures);\r\n        }\r\n        \r\n        // Return the data directly without nesting it further\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching enterprise stages:', error);\r\n        console.error('Error details:', error.response?.data);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createStage = async (stageData) => {\r\n    try {\r\n        console.log('Creating stage with data:', stageData);\r\n        const response = await api.post('/entreprise/stages', stageData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating stage:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const postulerStage = async (formData) => {\r\n    // Configure axios to handle FormData\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    };\r\n    const response = await api.post(`/stage/${formData.get('stageId')}/postuler`, formData, config);\r\n    return response.data;\r\n};\r\n\r\nexport const getStageStats = async () => {\r\n    const response = await api.get('/admin/stages/stats');\r\n    return response.data;\r\n};\r\n\r\nexport const getCandidatures = async () => {\r\n    try {\r\n        const response = await api.get('/entreprise/candidatures');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching candidatures:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const traiterCandidature = async (candidatureId, data) => {\r\n    try {\r\n        const response = await api.put(`/entreprise/candidatures/${candidatureId}/traiter`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error processing candidature:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateStage = async (stageId, stageData) => {\r\n    try {\r\n        console.log('Updating stage with ID:', stageId, 'and data:', stageData);\r\n        const response = await api.put(`/entreprise/stages/${stageId}`, stageData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating stage:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteStage = async (stageId) => {\r\n    try {\r\n        console.log('Deleting stage with ID:', stageId);\r\n        const response = await api.delete(`/entreprise/stages/${stageId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error deleting stage:', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}