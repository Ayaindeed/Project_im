{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Project_\\\\internship-management-app\\\\frontend\\\\src\\\\pages\\\\InternshipList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllStages, postulerStage } from '../services/stageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InternshipList = () => {\n  _s();\n  const [stages, setStages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    fetchStages();\n  }, []);\n  const fetchStages = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await getAllStages();\n      console.log('Stages data:', data); // Debug log\n      if (Array.isArray(data)) {\n        setStages(data);\n      } else {\n        throw new Error('Invalid data format received');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Fetch error:', err);\n      setError(\"Erreur lors du chargement des stages: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handlePostuler = async stageId => {\n    try {\n      await postulerStage({\n        stageId\n      });\n      setSuccessMessage('Candidature envoyée avec succès!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      setError(\"Erreur lors de l'envoi de la candidature\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"internship-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stages Disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"internships-grid\",\n      children: stages.map(stage => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"internship-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: stage.titre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"internship-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Entreprise:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 20\n            }, this), \" \", stage.entrepriseNom]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dur\\xE9e:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 20\n            }, this), \" \", stage.duree]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: stage.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => handlePostuler(stage.id),\n          children: \"Postuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, stage.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(InternshipList, \"PviK+iMm80MYQcAh+z5oqBx7YUo=\");\n_c = InternshipList;\nexport default InternshipList;\nvar _c;\n$RefreshReg$(_c, \"InternshipList\");","map":{"version":3,"names":["React","useState","useEffect","getAllStages","postulerStage","jsxDEV","_jsxDEV","InternshipList","_s","stages","setStages","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","fetchStages","data","console","log","Array","isArray","Error","err","_err$response","_err$response$data","response","message","handlePostuler","stageId","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stage","titre","entrepriseNom","duree","description","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Project_/internship-management-app/frontend/src/pages/InternshipList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllStages, postulerStage } from '../services/stageService';\n\nconst InternshipList = () => {\n  const [stages, setStages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  useEffect(() => {\n    fetchStages();\n  }, []);\n\n  const fetchStages = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await getAllStages();\n      console.log('Stages data:', data); // Debug log\n      if (Array.isArray(data)) {\n        setStages(data);\n      } else {\n        throw new Error('Invalid data format received');\n      }\n    } catch (err) {\n      console.error('Fetch error:', err);\n      setError(\"Erreur lors du chargement des stages: \" + (err.response?.data?.message || err.message));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePostuler = async (stageId) => {\n    try {\n      await postulerStage({ stageId });\n      setSuccessMessage('Candidature envoyée avec succès!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      setError(\"Erreur lors de l'envoi de la candidature\");\n    }\n  };\n\n  return (\n    <div className=\"internship-list\">\n      <h2>Stages Disponibles</h2>\n      \n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      {isLoading ? (\n        <div className=\"loading\">Chargement...</div>\n      ) : (\n        <div className=\"internships-grid\">\n          {stages.map(stage => (\n            <div key={stage.id} className=\"internship-card\">\n              <h3>{stage.titre}</h3>\n              <div className=\"internship-details\">\n                <p><strong>Entreprise:</strong> {stage.entrepriseNom}</p>\n                <p><strong>Durée:</strong> {stage.duree}</p>\n                <p className=\"description\">{stage.description}</p>\n              </div>\n              <button \n                className=\"btn btn-primary\"\n                onClick={() => handlePostuler(stage.id)}\n              >\n                Postuler\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InternshipList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}