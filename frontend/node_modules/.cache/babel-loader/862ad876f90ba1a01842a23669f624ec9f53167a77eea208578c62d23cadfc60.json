{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const registerUser = async userData => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\nexport const loginUser = async credentials => {\n  const response = await api.post('/auth/login', credentials);\n  // Save user info for dashboard greeting\n  if (response.data.user) {\n    localStorage.setItem('user', JSON.stringify(response.data.user));\n  }\n  return response.data;\n};\nexport const fetchInternships = async () => {\n  const response = await api.get('/stages');\n  return response.data;\n};\nexport const createInternship = async internshipData => {\n  const response = await api.post('/stages', internshipData);\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","registerUser","userData","response","post","data","loginUser","credentials","user","setItem","JSON","stringify","fetchInternships","get","createInternship","internshipData"],"sources":["C:/Users/hp/Downloads/Project_/internship-management-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://localhost:5000/api',\n});\n\napi.interceptors.request.use(\n    config => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\nexport const registerUser = async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n};\n\nexport const loginUser = async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    // Save user info for dashboard greeting\n    if (response.data.user) {\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n};\n\nexport const fetchInternships = async () => {\n    const response = await api.get('/stages');\n    return response.data;\n};\n\nexport const createInternship = async (internshipData) => {\n    const response = await api.post('/stages', internshipData);\n    return response.data;\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACxBC,MAAM,IAAI;EACN,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;EAC3D,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,MAAMJ,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAEG,WAAW,CAAC;EAC3D;EACA,IAAIJ,QAAQ,CAACE,IAAI,CAACG,IAAI,EAAE;IACpBb,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACE,IAAI,CAACG,IAAI,CAAC,CAAC;EACpE;EACA,OAAOL,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMT,QAAQ,GAAG,MAAMhB,GAAG,CAAC0B,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOV,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAG,MAAOC,cAAc,IAAK;EACtD,MAAMZ,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,SAAS,EAAEW,cAAc,CAAC;EAC1D,OAAOZ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}