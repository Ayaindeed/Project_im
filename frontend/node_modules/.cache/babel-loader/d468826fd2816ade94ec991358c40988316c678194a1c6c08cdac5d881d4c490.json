{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Project_\\\\internship-management-app\\\\frontend\\\\src\\\\components\\\\NotificationBell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Badge, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport { FaBell, FaCheck, FaTrash, FaTimes, FaCheckCircle, FaTimesCircle, FaClock, FaInfoCircle, FaDot } from 'react-icons/fa';\nimport { notificationService } from '../services/notificationService';\nimport mascotImage from '../assets/mascot.png';\nimport './NotificationBell.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotificationBell = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [showOnlyUnread, setShowOnlyUnread] = useState(false);\n  useEffect(() => {\n    loadNotifications();\n    loadUnreadCount();\n\n    // Polling pour les nouvelles notifications (toutes les 30 secondes)\n    const interval = setInterval(() => {\n      loadUnreadCount();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const loadNotifications = async () => {\n    try {\n      setLoading(true);\n      const data = await notificationService.getNotifications();\n      setNotifications(data || []);\n    } catch (error) {\n      console.error('Erreur lors du chargement des notifications:', error);\n      // No fake notifications - show empty state\n      setNotifications([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadUnreadCount = async () => {\n    try {\n      const data = await notificationService.getUnreadCount();\n      setUnreadCount(data.count || 0);\n    } catch (error) {\n      console.error('Erreur lors du chargement du compteur:', error);\n      // No fake count - show 0\n      setUnreadCount(0);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      await notificationService.markAsRead(notificationId);\n      setNotifications(notifications.map(notif => notif.id === notificationId ? {\n        ...notif,\n        lu: true\n      } : notif));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Erreur lors du marquage comme lu:', error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await notificationService.markAllAsRead();\n      setNotifications(notifications.map(notif => ({\n        ...notif,\n        lu: true\n      })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error('Erreur lors du marquage global:', error);\n    }\n  };\n  const deleteNotification = async notificationId => {\n    console.log('Tentative de suppression de la notification:', notificationId);\n    try {\n      await notificationService.deleteNotification(notificationId);\n\n      // Mettre à jour la liste des notifications\n      const notificationToDelete = notifications.find(n => n.id === notificationId);\n      setNotifications(notifications.filter(notif => notif.id !== notificationId));\n\n      // Réduire le compteur si la notification n'était pas lue\n      if (notificationToDelete && !notificationToDelete.lu) {\n        setUnreadCount(prev => Math.max(0, prev - 1));\n      }\n      console.log('Notification supprimée avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la suppression:', error);\n      // En cas d'erreur du service, supprimer quand même localement pour la démonstration\n      const notificationToDelete = notifications.find(n => n.id === notificationId);\n      setNotifications(notifications.filter(notif => notif.id !== notificationId));\n      if (notificationToDelete && !notificationToDelete.lu) {\n        setUnreadCount(prev => Math.max(0, prev - 1));\n      }\n    }\n  };\n  const toggle = () => {\n    setIsOpen(!isOpen);\n    if (!isOpen) {\n      loadNotifications();\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'acceptee':\n        return /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n          style: {\n            color: '#28a745'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }, this);\n      case 'refusee':\n        return /*#__PURE__*/_jsxDEV(FaTimesCircle, {\n          style: {\n            color: '#dc3545'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this);\n      case 'en_attente':\n        return /*#__PURE__*/_jsxDEV(FaClock, {\n          style: {\n            color: '#ffc107'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(FaInfoCircle, {\n          style: {\n            color: '#17a2b8'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n    if (diffHours < 1) {\n      return 'À l\\'instant';\n    } else if (diffHours < 24) {\n      return `Il y a ${diffHours}h`;\n    } else if (diffDays < 7) {\n      return `Il y a ${diffDays}j`;\n    } else {\n      return date.toLocaleDateString('fr-FR');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    isOpen: isOpen,\n    toggle: toggle,\n    className: \"notification-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      tag: \"button\",\n      className: \"notification-bell\",\n      caret: false,\n      children: [/*#__PURE__*/_jsxDEV(FaBell, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"notification-badge\",\n        children: unreadCount > 99 ? '99+' : unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      right: true,\n      className: \"notification-menu\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n        header: true,\n        className: \"notification-header d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), \"            \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-switch\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Only show unread\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showOnlyUnread,\n            onChange: e => {\n              e.stopPropagation();\n              console.log('Toggle changed:', e.target.checked);\n              console.log('Current notifications:', notifications);\n              console.log('Unread notifications:', notifications.filter(n => !n.lu));\n              setShowOnlyUnread(e.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), \"        \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: loading ? /*#__PURE__*/_jsxDEV(DropdownItem, {\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: \"Chargement...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this) : (() => {\n          const filteredNotifications = showOnlyUnread ? notifications.filter(n => !n.lu) : notifications;\n          if (filteredNotifications.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-notifications-empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-state-mascot\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: mascotImage,\n                  alt: \"No notifications\",\n                  className: \"mascot-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sparkles\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sparkle sparkle-1\",\n                    children: \"\\u2728\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sparkle sparkle-2\",\n                    children: \"\\u2728\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sparkle sparkle-3\",\n                    children: \"\\u2728\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"empty-state-title\",\n                children: showOnlyUnread ? \"No unread notifications\" : \"No notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-state-subtitle\",\n                children: showOnlyUnread ? \"You're all caught up! New notifications will appear here.\" : \"You have no notifications yet. New notifications will appear here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this);\n          }\n          return filteredNotifications.slice(0, 10).map(notification => /*#__PURE__*/_jsxDEV(DropdownItem, {\n            className: `notification-item ${!notification.lu ? 'unread' : ''} notification-${notification.type}`,\n            onClick: () => !notification.lu && markAsRead(notification.id),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-icon\",\n                children: getNotificationIcon(notification.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification-title\",\n                  children: notification.titre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification-message\",\n                  children: notification.message.length > 50 ? notification.message.substring(0, 50) + '...' : notification.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification-time\",\n                  children: formatDate(notification.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-sm btn-outline-danger notification-delete-btn\",\n                  onClick: e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    console.log('Suppression de la notification:', notification.id);\n                    deleteNotification(notification.id);\n                  },\n                  title: \"Supprimer la notification\",\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 10\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this));\n        })()\n      }, `notifications-${showOnlyUnread}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 34\n      }, this), \"        \", (() => {\n        const filteredNotifications = showOnlyUnread ? notifications.filter(n => !n.lu) : notifications;\n        return filteredNotifications.length > 10 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n            divider: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [filteredNotifications.length - 10, \" autres notifications...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationBell, \"wtny7k/tbzM67J1ZIuDgr6c7qRQ=\");\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","useEffect","Badge","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","ListGroup","ListGroupItem","FaBell","FaCheck","FaTrash","FaTimes","FaCheckCircle","FaTimesCircle","FaClock","FaInfoCircle","FaDot","notificationService","mascotImage","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationBell","_s","notifications","setNotifications","unreadCount","setUnreadCount","isOpen","setIsOpen","loading","setLoading","showOnlyUnread","setShowOnlyUnread","loadNotifications","loadUnreadCount","interval","setInterval","clearInterval","data","getNotifications","error","console","getUnreadCount","count","markAsRead","notificationId","map","notif","id","lu","prev","Math","max","markAllAsRead","deleteNotification","log","notificationToDelete","find","n","filter","toggle","getNotificationIcon","type","style","color","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","date","Date","now","diffMs","diffHours","floor","diffDays","toLocaleDateString","className","children","tag","caret","size","right","header","onClick","e","stopPropagation","checked","onChange","target","disabled","filteredNotifications","length","src","alt","slice","notification","titre","message","substring","createdAt","preventDefault","title","divider","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Project_/internship-management-app/frontend/src/components/NotificationBell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Badge, \r\n  Dropdown, \r\n  DropdownToggle, \r\n  DropdownMenu, \r\n  DropdownItem,\r\n  Button,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from 'reactstrap';\r\nimport { FaBell, FaCheck, FaTrash, FaTimes, FaCheckCircle, FaTimesCircle, FaClock, FaInfoCircle, FaDot } from 'react-icons/fa';\r\nimport { notificationService } from '../services/notificationService';\r\nimport mascotImage from '../assets/mascot.png';\r\nimport './NotificationBell.css';\r\n\r\nconst NotificationBell = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showOnlyUnread, setShowOnlyUnread] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadNotifications();\r\n    loadUnreadCount();\r\n    \r\n    // Polling pour les nouvelles notifications (toutes les 30 secondes)\r\n    const interval = setInterval(() => {\r\n      loadUnreadCount();\r\n    }, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);  const loadNotifications = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await notificationService.getNotifications();\r\n      setNotifications(data || []);\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des notifications:', error);\r\n      // No fake notifications - show empty state\r\n      setNotifications([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };  const loadUnreadCount = async () => {\r\n    try {\r\n      const data = await notificationService.getUnreadCount();\r\n      setUnreadCount(data.count || 0);\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement du compteur:', error);\r\n      // No fake count - show 0\r\n      setUnreadCount(0);\r\n    }\r\n  };\r\n\r\n  const markAsRead = async (notificationId) => {\r\n    try {\r\n      await notificationService.markAsRead(notificationId);\r\n      setNotifications(notifications.map(notif => \r\n        notif.id === notificationId ? { ...notif, lu: true } : notif\r\n      ));\r\n      setUnreadCount(prev => Math.max(0, prev - 1));\r\n    } catch (error) {\r\n      console.error('Erreur lors du marquage comme lu:', error);\r\n    }\r\n  };\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      await notificationService.markAllAsRead();\r\n      setNotifications(notifications.map(notif => ({ ...notif, lu: true })));\r\n      setUnreadCount(0);\r\n    } catch (error) {\r\n      console.error('Erreur lors du marquage global:', error);\r\n    }\r\n  };\r\n  const deleteNotification = async (notificationId) => {\r\n    console.log('Tentative de suppression de la notification:', notificationId);\r\n    try {\r\n      await notificationService.deleteNotification(notificationId);\r\n      \r\n      // Mettre à jour la liste des notifications\r\n      const notificationToDelete = notifications.find(n => n.id === notificationId);\r\n      setNotifications(notifications.filter(notif => notif.id !== notificationId));\r\n      \r\n      // Réduire le compteur si la notification n'était pas lue\r\n      if (notificationToDelete && !notificationToDelete.lu) {\r\n        setUnreadCount(prev => Math.max(0, prev - 1));\r\n      }\r\n      \r\n      console.log('Notification supprimée avec succès');\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression:', error);\r\n      // En cas d'erreur du service, supprimer quand même localement pour la démonstration\r\n      const notificationToDelete = notifications.find(n => n.id === notificationId);\r\n      setNotifications(notifications.filter(notif => notif.id !== notificationId));\r\n      if (notificationToDelete && !notificationToDelete.lu) {\r\n        setUnreadCount(prev => Math.max(0, prev - 1));\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n    if (!isOpen) {\r\n      loadNotifications();\r\n    }\r\n  };\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'acceptee':\r\n        return <FaCheckCircle style={{ color: '#28a745' }} />;\r\n      case 'refusee':\r\n        return <FaTimesCircle style={{ color: '#dc3545' }} />;\r\n      case 'en_attente':\r\n        return <FaClock style={{ color: '#ffc107' }} />;\r\n      default:\r\n        return <FaInfoCircle style={{ color: '#17a2b8' }} />;\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffMs = now - date;\r\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\r\n    const diffDays = Math.floor(diffHours / 24);\r\n\r\n    if (diffHours < 1) {\r\n      return 'À l\\'instant';\r\n    } else if (diffHours < 24) {\r\n      return `Il y a ${diffHours}h`;\r\n    } else if (diffDays < 7) {\r\n      return `Il y a ${diffDays}j`;\r\n    } else {\r\n      return date.toLocaleDateString('fr-FR');\r\n    }\r\n  };  return (\r\n    <Dropdown isOpen={isOpen} toggle={toggle} className=\"notification-dropdown\">\r\n      <DropdownToggle \r\n        tag=\"button\" \r\n        className=\"notification-bell\"\r\n        caret={false}\r\n      >\r\n        <FaBell size={16} />\r\n        {unreadCount > 0 && (\r\n          <Badge className=\"notification-badge\">\r\n            {unreadCount > 99 ? '99+' : unreadCount}\r\n          </Badge>\r\n        )}\r\n      </DropdownToggle>      <DropdownMenu right className=\"notification-menu\">\r\n          <DropdownItem header className=\"notification-header d-flex justify-content-between align-items-center\">\r\n            <span>Notifications</span>            <div className=\"toggle-switch\" onClick={(e) => e.stopPropagation()}>\r\n              <span>Only show unread</span>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={showOnlyUnread}\r\n                onChange={(e) => {\r\n                  e.stopPropagation();\r\n                  console.log('Toggle changed:', e.target.checked);\r\n                  console.log('Current notifications:', notifications);\r\n                  console.log('Unread notifications:', notifications.filter(n => !n.lu));\r\n                  setShowOnlyUnread(e.target.checked);\r\n                }}\r\n              />\r\n            </div>\r\n          </DropdownItem>        <div className=\"notification-list\" key={`notifications-${showOnlyUnread}`}>\r\n          {loading ? (\r\n            <DropdownItem disabled>\r\n              <div className=\"text-center\">Chargement...</div>\r\n            </DropdownItem>\r\n          ) : (() => {\r\n            const filteredNotifications = showOnlyUnread ? notifications.filter(n => !n.lu) : notifications;\r\n            \r\n            if (filteredNotifications.length === 0) {\r\n              return (\r\n                <div className=\"no-notifications-empty-state\">\r\n                  <div className=\"empty-state-mascot\">\r\n                    <img src={mascotImage} alt=\"No notifications\" className=\"mascot-image\" />\r\n                    <div className=\"sparkles\">\r\n                      <div className=\"sparkle sparkle-1\">✨</div>\r\n                      <div className=\"sparkle sparkle-2\">✨</div>\r\n                      <div className=\"sparkle sparkle-3\">✨</div>\r\n                    </div>\r\n                  </div>\r\n                  <h4 className=\"empty-state-title\">\r\n                    {showOnlyUnread ? \"No unread notifications\" : \"No notifications\"}\r\n                  </h4>\r\n                  <p className=\"empty-state-subtitle\">\r\n                    {showOnlyUnread \r\n                      ? \"You're all caught up! New notifications will appear here.\"\r\n                      : \"You have no notifications yet. New notifications will appear here.\"\r\n                    }\r\n                  </p>\r\n                </div>\r\n              );\r\n            }\r\n            \r\n            return filteredNotifications.slice(0, 10).map((notification) => (\r\n              <DropdownItem \r\n                key={notification.id} \r\n                className={`notification-item ${!notification.lu ? 'unread' : ''} notification-${notification.type}`}\r\n                onClick={() => !notification.lu && markAsRead(notification.id)}\r\n              >\r\n                <div className=\"notification-content\">\r\n                  <div className=\"notification-icon\">\r\n                    {getNotificationIcon(notification.type)}\r\n                  </div>\r\n                  <div className=\"notification-text\">\r\n                    <div className=\"notification-title\">\r\n                      {notification.titre}\r\n                    </div>\r\n                    <div className=\"notification-message\">\r\n                      {notification.message.length > 50 ? \r\n                        notification.message.substring(0, 50) + '...' : \r\n                        notification.message\r\n                      }\r\n                    </div>\r\n                    <div className=\"notification-time\">\r\n                      {formatDate(notification.createdAt)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"notification-actions\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-outline-danger notification-delete-btn\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        console.log('Suppression de la notification:', notification.id);\r\n                        deleteNotification(notification.id);\r\n                      }}\r\n                      title=\"Supprimer la notification\"\r\n                    >\r\n                      <FaTrash size={10} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </DropdownItem>\r\n            ));\r\n          })()}\r\n        </div>        {(() => {\r\n          const filteredNotifications = showOnlyUnread ? notifications.filter(n => !n.lu) : notifications;\r\n          return filteredNotifications.length > 10 && (\r\n            <>\r\n              <DropdownItem divider />\r\n              <DropdownItem className=\"text-center\">\r\n                <small className=\"text-muted\">\r\n                  {filteredNotifications.length - 10} autres notifications...\r\n                </small>\r\n              </DropdownItem>\r\n            </>\r\n          );\r\n        })()}\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NotificationBell;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}