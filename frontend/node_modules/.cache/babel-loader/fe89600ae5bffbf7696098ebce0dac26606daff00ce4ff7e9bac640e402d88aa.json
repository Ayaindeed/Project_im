{"ast":null,"code":"import api from'./api';export const loginUser=async credentials=>{try{const response=await api.post('/auth/login',credentials);if(response.data.token){localStorage.setItem('token',response.data.token);localStorage.setItem('user',JSON.stringify(response.data.user));// Dispatch un événement personnalisé pour signaler la connexion\nconst loginEvent=new CustomEvent('userLogin',{detail:{user:response.data.user}});window.dispatchEvent(loginEvent);}return response.data;}catch(error){console.error('Login error:',error);throw error;}};export const registerUser=async userData=>{const response=await api.post('/auth/register',userData);return response.data;};export const registerAdmin=async adminData=>{try{const response=await api.post('/auth/admin/register',{nom:adminData.nom,prenom:adminData.prenom,email:adminData.email,motdepasse:adminData.motdepasse});return response.data;}catch(error){console.error('Admin registration error:',error);throw error;}};export const updateProfile=async formData=>{try{const response=await api.put('/auth/profile',formData,{headers:{'Content-Type':'multipart/form-data'}});return response;}catch(error){console.error('Update profile error:',error);throw error;}};export const authService={loginUser,registerUser,registerAdmin,updateProfile};","map":{"version":3,"names":["api","loginUser","credentials","response","post","data","token","localStorage","setItem","JSON","stringify","user","loginEvent","CustomEvent","detail","window","dispatchEvent","error","console","registerUser","userData","registerAdmin","adminData","nom","prenom","email","motdepasse","updateProfile","formData","put","headers","authService"],"sources":["C:/Users/hp/Downloads/Project_/internship-management-app/frontend/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/auth/login', credentials);\r\n        \r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n            \r\n            // Dispatch un événement personnalisé pour signaler la connexion\r\n            const loginEvent = new CustomEvent('userLogin', { \r\n                detail: { user: response.data.user } \r\n            });\r\n            window.dispatchEvent(loginEvent);\r\n        }\r\n        \r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n};\r\n\r\nexport const registerAdmin = async (adminData) => {\r\n    try {\r\n        const response = await api.post('/auth/admin/register', {\r\n            nom: adminData.nom,\r\n            prenom: adminData.prenom,\r\n            email: adminData.email,\r\n            motdepasse: adminData.motdepasse\r\n        });\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Admin registration error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateProfile = async (formData) => {\r\n    try {\r\n        const response = await api.put('/auth/profile', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Update profile error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const authService = {\r\n    loginUser,\r\n    registerUser,\r\n    registerAdmin,\r\n    updateProfile\r\n};"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC5C,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,aAAa,CAAEF,WAAW,CAAC,CAE3D,GAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC,CAEhE;AACA,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,WAAW,CAAC,WAAW,CAAE,CAC5CC,MAAM,CAAE,CAAEH,IAAI,CAAER,QAAQ,CAACE,IAAI,CAACM,IAAK,CACvC,CAAC,CAAC,CACFI,MAAM,CAACC,aAAa,CAACJ,UAAU,CAAC,CACpC,CAEA,MAAO,CAAAT,QAAQ,CAACE,IAAI,CACxB,CAAE,MAAOY,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC5C,KAAM,CAAAjB,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,gBAAgB,CAAEgB,QAAQ,CAAC,CAC3D,MAAO,CAAAjB,QAAQ,CAACE,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAgB,aAAa,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC9C,GAAI,CACA,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,sBAAsB,CAAE,CACpDmB,GAAG,CAAED,SAAS,CAACC,GAAG,CAClBC,MAAM,CAAEF,SAAS,CAACE,MAAM,CACxBC,KAAK,CAAEH,SAAS,CAACG,KAAK,CACtBC,UAAU,CAAEJ,SAAS,CAACI,UAC1B,CAAC,CAAC,CAEF,MAAO,CAAAvB,QAAQ,CAACE,IAAI,CACxB,CAAE,MAAOY,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED,MAAO,MAAM,CAAAU,aAAa,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC7C,GAAI,CACA,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAAC6B,GAAG,CAAC,eAAe,CAAED,QAAQ,CAAE,CACtDE,OAAO,CAAE,CACL,cAAc,CAAE,qBACpB,CACJ,CAAC,CAAC,CACF,MAAO,CAAA3B,QAAQ,CACnB,CAAE,MAAOc,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED,MAAO,MAAM,CAAAc,WAAW,CAAG,CACvB9B,SAAS,CACTkB,YAAY,CACZE,aAAa,CACbM,aACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}